import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { 
  FileText, 
  Download, 
  Presentation,
  TrendingUp,
  Users,
  DollarSign,
  Calendar,
  Shield
} from "lucide-react";

interface BusinessPlanViewerProps {
  businessPlan: {
    executiveSummary: string;
    problemStatement: string;
    solutionDescription: string;
    marketAnalysis: string;
    businessModel: string;
    marketingStrategy: string;
    operationalPlan: string;
    managementTeam: string;
    financialProjections: string;
    fundingRequirements: string;
    riskAnalysis: string;
    timeline: string;
  };
}

export default function BusinessPlanViewer({ businessPlan }: BusinessPlanViewerProps) {
  const sections = [
    {
      id: "executive",
      title: "Executive Summary",
      icon: FileText,
      content: businessPlan.executiveSummary
    },
    {
      id: "problem",
      title: "Problem Statement",
      icon: Shield,
      content: businessPlan.problemStatement
    },
    {
      id: "solution",
      title: "Solution",
      icon: TrendingUp,
      content: businessPlan.solutionDescription
    },
    {
      id: "market",
      title: "Market Analysis",
      icon: Users,
      content: businessPlan.marketAnalysis
    },
    {
      id: "business-model",
      title: "Business Model",
      icon: DollarSign,
      content: businessPlan.businessModel
    },
    {
      id: "marketing",
      title: "Marketing Strategy",
      icon: Presentation,
      content: businessPlan.marketingStrategy
    },
    {
      id: "operations",
      title: "Operations",
      icon: FileText,
      content: businessPlan.operationalPlan
    },
    {
      id: "team",
      title: "Management Team",
      icon: Users,
      content: businessPlan.managementTeam
    },
    {
      id: "financials",
      title: "Financial Projections",
      icon: TrendingUp,
      content: businessPlan.financialProjections
    },
    {
      id: "funding",
      title: "Funding Requirements",
      icon: DollarSign,
      content: businessPlan.fundingRequirements
    },
    {
      id: "risks",
      title: "Risk Analysis",
      icon: Shield,
      content: businessPlan.riskAnalysis
    },
    {
      id: "timeline",
      title: "Timeline",
      icon: Calendar,
      content: businessPlan.timeline
    }
  ];

  const handleExport = (format: 'pdf' | 'word') => {
    // In a real implementation, this would call an API to generate and download the document
    alert(`Exporting business plan as ${format.toUpperCase()}... This feature would be implemented with a document generation service.`);
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h2 className="text-2xl font-bold text-slate-900">Business Plan</h2>
          <p className="text-slate-600">Comprehensive business plan generated by AI</p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" onClick={() => handleExport('pdf')}>
            <Download className="w-4 h-4 mr-2" />
            Export PDF
          </Button>
          <Button variant="outline" onClick={() => handleExport('word')}>
            <Download className="w-4 h-4 mr-2" />
            Export Word
          </Button>
        </div>
      </div>

      <Tabs defaultValue="executive" className="w-full">
        <TabsList className="grid grid-cols-4 md:grid-cols-6 lg:grid-cols-12 w-full">
          {sections.map((section) => (
            <TabsTrigger 
              key={section.id} 
              value={section.id}
              className="text-xs"
            >
              <section.icon className="w-4 h-4 mr-1" />
              <span className="hidden sm:inline">{section.title}</span>
            </TabsTrigger>
          ))}
        </TabsList>

        {sections.map((section) => (
          <TabsContent key={section.id} value={section.id}>
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <section.icon className="w-5 h-5 mr-2" />
                  {section.title}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="prose max-w-none">
                  {section.content.split('\n').map((paragraph, index) => (
                    <p key={index} className="mb-4 text-slate-700 leading-relaxed">
                      {paragraph}
                    </p>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        ))}
      </Tabs>
    </div>
  );
}
